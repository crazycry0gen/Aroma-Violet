@model Aroma_Violet.Models.ClientViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(m => m.IgnoreRebate)
    @Html.HiddenFor(m=>m.DeliveryAddress_AddressId)
    @Html.HiddenFor(m=>m.PostalAddress_AddressId)

    <div class="form-horizontal">
        <h4>Client</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ClientId)
        @Html.HiddenFor(model=>model.iDate)
        <table>
            <tr>
                <td>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ResellerID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ResellerID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ResellerID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ClientId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ClientId, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                            @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ClientInitials, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ClientInitials, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ClientInitials, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.NickName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.NickName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NickName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FullNames, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FullNames, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FullNames, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LanguageID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("LanguageID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Language, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Employer, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Employer, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Employer, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IDNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.IDNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.IDNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ClientTypeID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("ClientTypeID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ClientTypeID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Occupation, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Occupation, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Occupation, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.PostalAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="DisplayGroup">
                                @Html.DisplayFor(model => model.PostalAddress, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.PostalAddress.AddressId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DeliveryAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="DisplayGroup">
                                @Html.DisplayFor(model => model.DeliveryAddress, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.DeliveryAddress.AddressId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
                <td>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ClientSurname, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ClientSurname, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ClientSurname, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SAResident, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.SAResident)
                                @Html.ValidationMessageFor(model => model.SAResident, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.TitleID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("TitleID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TitleID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EthnicGroupID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("EthnicGroupID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.EthnicGroupID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IncomeGroupID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("IncomeGroupID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.IncomeGroupID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ProvinceID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("ProvinceID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ProvinceID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CountryID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("CountryID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.RegistrationNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.RegistrationNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.RegistrationNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                   

                    @for(int contactIndex = 0; contactIndex< Model.Contacts.Length; contactIndex++)
                    {
                    <div class="form-group">
                        <label class = "control-label col-md-2">@Model.Contacts[contactIndex].ClientContactTypeName</label>
                        <div class="col-md-10">
                                @Html.EditorFor(model => model.Contacts[contactIndex].ClientContactValue, new { htmlAttributes = new { @class = "form-control", onChange=string.Format("UpdateContact({0},{1},this)", Model.ClientId,Model.Contacts[contactIndex].ClientContactTypeId) } })
                                @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    }
                    <div class="form-group">
                        @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Active)
                                @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>

                </td>
            </tr>
        </table>

    </div>
}

<div>
    @Html.ActionLink("Go To Subscriptions", "Manage", "ClientSubscriptions", new { ClientID = Model.ClientId },htmlAttributes:null) |
    @Html.ActionLink("Go To Banking", "Edit", "BankingDetails", new { ClientID = Model.ClientId }, htmlAttributes: null) |
    @Html.ActionLink("Go To Client List", "Index")|
    @Html.ActionLink("Go To Details", "Details", "Clients", new { id = Model.ClientId }, htmlAttributes: null) 
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
