@model Aroma_Violet.Models.OrderHeader

@{
    ViewBag.Title = "Create";
    //var shippingCost = ViewBag.ShippingCost as KeyValuePair<string, string>[];
}

<h2>Create</h2>
<h4>Order</h4>
<table>
 <tr>
     <td>
         <div class="form-group">
             @Html.DisplayFor(m => m.Client)
         </div>
     </td>
 </tr>
    </table>
<table>
       @*<tr>
           @if (shippingCost.Length == 0)
           {
               <td>
                   <label class = "text-danger">There are no shipping options available </label>
               </td>
           }
           else
           {
           <td>
               <dl class="dl-horizontal">
                   @foreach (var shipOpt in shippingCost)
                   {
                       <dt>@shipOpt.Key</dt>
                       <dd>@shipOpt.Value</dd>
                   }
               </dl>
           </td>
           }
        <td>*@
 
       


            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                @Html.HiddenFor(m => m.Active)
                
                @Html.HiddenFor(m => m.OrderStatusId)
                @Html.HiddenFor(m => m.UserId)
                @Html.HiddenFor(m => m.ShippingTypeId)
                @Html.HiddenFor(m=> m.OnceOff)

                <div class="form-horizontal">
                    
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                    <div class="form-group">
                        @Html.LabelFor(model => model.OrderDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.OrderDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.OrderDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.SalesTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("SalesTypeId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.SalesTypeId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    
                    @*<div class="form-group">
                        @Html.Label("Postage Charge", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("PostageChargeId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessage("PostageChargeId", "", new { @class = "text-danger" })
                        </div>
                    </div>*@
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create Order" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }
        </td>
    </tr>
</table>
<div>
    <a href="javascript:history.back()">Go Back</a>
</div>