@model List<Aroma_Violet.Models.UserRoleViewModel>

@{
    ViewBag.Title = "Index";
    var roles = ViewBag.Roles;
    var users = Model.OrderBy(m=>m.Username).ToArray();
}

<h2>Index</h2>
@Html.Label("Feedback", " ", new { @class = "text-danger",id="Feedback" })
<table>
    <tr>
        <th colspan="2">User</th>
        <th>Client Id</th>
        @foreach (var role in roles)
        {
            <th>@role</th>
        }
    </tr>
    @for (int i = 0; i < users.Length; i++)
    {

        
    <tr>
        <td colspan="2">@users[i].Username</td>
        <td>@Html.EditorFor(m=>users[i].ClientId, new { htmlAttributes = new { @class = "form-control", onchange = string.Format("UpdateClient(this,'{0}')", users[i].Id) } })</td>
        @for (int r = 0; r < roles.Length; r++)
        {
            var inRole = users[i].Roles.Contains(roles[r]);
            var inRoleText = inRole ? "checked" : "";
            var changeText = inRole ? "X" : "<-";
            <td><a href="@Url.Action("ChangeRole",new { userid=@users[i].Id,  role = roles[r],  addUser = !inRole })">@changeText</a></td>
        }
    </tr>
    }
</table>

<script type="text/javascript">
    function UpdateClient(textbox, userId)
    {
        var clientData = {
            clientIdText: textbox.value,
            userId: userId
        }
        var responceElement = "Feedback" ;

        var url = '@Url.Action("UpdateUserClient","Account")';
        callServerMethod(clientData, url, responceElement);
    }
</script>

