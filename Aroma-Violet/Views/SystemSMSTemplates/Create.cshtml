@model Aroma_Violet.Models.SystemSMSTemplate

@{
    ViewBag.Title = "Create";
    var variableList = string.Empty;
    if (ViewBag.Variables != null)
    {
        foreach (var v in ViewBag.Variables)
        {
            variableList += string.Format("{0}\r\n", v);
        }
    }
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>SMS Template</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" }, onkeyup = "GetSMSLength(this)" } )
                <textarea>@variableList</textarea>
                @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">SMS Length</label>
            <div class="col-md-10">
                <input type="text" readonly id="SMSLenthDisplay" value="0" class = "form-control"/>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Active)
                    @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script type="text/javascript">
    function GetSMSLength(textbox) {
        var length = textbox.textContent.length;
        var td = document.getElementById("SMSLenthDisplay");
        td.value = length;
    }
</script>